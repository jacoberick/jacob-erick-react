{"version":3,"sources":["logo.svg","images/skellygif.gif","components/Header.js","components/Home.js","components/Footer.js","components/Contact.js","components/Music.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","require","alt","id","target","href","Home","Footer","icon","faApple","faSpotify","faYoutube","faInstagram","faTwitter","Contact","Music","faAmazon","faSoundcloud","App","basename","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kLAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,yJCwC5BC,EArCA,WACb,OACE,6BACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAvB,QAGA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,aAA5B,UAIF,yBAAKA,UAAU,cACb,yBACEE,IAAKC,EAAQ,IACbC,IAAI,SACJC,GAAG,eAGP,yBAAKL,UAAU,YACZ,IACD,uBACEM,OAAO,SACPC,KAAK,2DACLP,UAAU,aAHZ,SAOA,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,aAA9B,eCrBKQ,EARF,WACX,OACE,6BACE,wBAAIH,GAAG,aAAP,iB,cCsCSI,EAjCA,WACb,OACE,yBAAKT,UAAU,UACb,yBAAKA,UAAU,iBACb,uBACEM,OAAO,SACPC,KAAK,6DAEL,kBAAC,IAAD,CAAiBG,KAAMC,OAEzB,uBACEL,OAAO,SACPC,KAAK,oFAEL,kBAAC,IAAD,CAAiBG,KAAME,OAEzB,uBACEN,OAAO,SACPC,KAAK,4DAEL,kBAAC,IAAD,CAAiBG,KAAMG,OAEzB,uBAAGP,OAAO,SAASC,KAAK,yCACtB,kBAAC,IAAD,CAAiBG,KAAMI,OAEzB,uBAAGR,OAAO,SAASC,KAAK,mCACtB,kBAAC,IAAD,CAAiBG,KAAMK,UCvBlBC,EAXC,WACd,OACE,yBAAKX,GAAG,eACN,wBAAIL,UAAU,MAAd,iBACA,uBAAGA,UAAU,aACX,uBAAGO,KAAK,8BAAR,0BC+COU,EA5CD,WACZ,OACE,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,iBACb,uBACEA,UAAU,OACVM,OAAO,SACPC,KAAK,6DAEL,kBAAC,IAAD,CAAiBG,KAAMC,OAEzB,uBACEX,UAAU,OACVM,OAAO,SACPC,KAAK,oFAEL,kBAAC,IAAD,CAAiBG,KAAME,OAEzB,uBACEZ,UAAU,OACVM,OAAO,SACPC,KAAK,4DAEL,kBAAC,IAAD,CAAiBG,KAAMG,OAEzB,uBACEb,UAAU,OACVM,OAAO,SACPC,KAAK,uJAEL,kBAAC,IAAD,CAAiBG,KAAMQ,OAEzB,uBACElB,UAAU,OACVM,OAAO,SACPC,KAAK,yCAEL,kBAAC,IAAD,CAAiBG,KAAMS,UCrBlBC,MAdf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWN,IAChC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWf,KAE7B,kBAAC,EAAD,Q,kBCTcgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8c9e365a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/skellygif.43152055.gif\";","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div>\n      <nav className=\"main--nav\">\n        <div className=\"half-nav\">\n          <Link to=\"/\" className=\"nav--link\">\n            HOME\n          </Link>\n          <Link to=\"/music\" className=\"nav--link\">\n            MUSIC\n          </Link>\n        </div>\n        <div className=\"middle-nav\">\n          <img\n            src={require(\"../images/skellygif.gif\")}\n            alt=\"skelly\"\n            id=\"skellygif\"\n          />\n        </div>\n        <div className=\"half-nav\">\n          {\" \"}\n          <a\n            target=\"_blank\"\n            href=\"https://www.youtube.com/channel/UCFbv2XhL6KFlwPS63GhZnMA\"\n            className=\"nav--link\"\n          >\n            VIDEO\n          </a>\n          <Link to=\"/contact\" className=\"nav--link\">\n            CONTACT\n          </Link>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1 id=\"nameTitle\">jacob erick</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faApple,\n  faSpotify,\n  faYoutube,\n  faInstagram,\n  faTwitter\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer--icons\">\n        <a\n          target=\"_blank\"\n          href=\"https://itunes.apple.com/us/artist/jacob-erick/1435744565\"\n        >\n          <FontAwesomeIcon icon={faApple} />\n        </a>\n        <a\n          target=\"_blank\"\n          href=\"https://open.spotify.com/artist/2ykzVg42YZ5JHBi3Bhf5GA?si=uAPELdlFTgWuuvqwjHNyGA\"\n        >\n          <FontAwesomeIcon icon={faSpotify} />\n        </a>\n        <a\n          target=\"_blank\"\n          href=\"https://www.youtube.com/channel/UCFbv2XhL6KFlwPS63GhZnMA\"\n        >\n          <FontAwesomeIcon icon={faYoutube} />\n        </a>\n        <a target=\"_blank\" href=\"https://www.instagram.com/jacoberickk\">\n          <FontAwesomeIcon icon={faInstagram} />\n        </a>\n        <a target=\"_blank\" href=\"https://twitter.com/jacoberickk\">\n          <FontAwesomeIcon icon={faTwitter} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div id=\"contactText\">\n      <h1 className=\"h5\">ALL INQUIRIES</h1>\n      <p className=\"display-3\">\n        <a href=\"mailto:info@jacoberick.com\">INFO@JACOBERICK.COM</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faApple,\n  faSpotify,\n  faYoutube,\n  faAmazon,\n  faSoundcloud\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Music = () => {\n  return (\n    <div className=\"music\">\n      <div className=\"music--icons \">\n        <a\n          className=\"grow\"\n          target=\"_blank\"\n          href=\"https://itunes.apple.com/us/artist/jacob-erick/1435744565\"\n        >\n          <FontAwesomeIcon icon={faApple} />\n        </a>\n        <a\n          className=\"grow\"\n          target=\"_blank\"\n          href=\"https://open.spotify.com/artist/2ykzVg42YZ5JHBi3Bhf5GA?si=uAPELdlFTgWuuvqwjHNyGA\"\n        >\n          <FontAwesomeIcon icon={faSpotify} />\n        </a>\n        <a\n          className=\"grow\"\n          target=\"_blank\"\n          href=\"https://www.youtube.com/channel/UCFbv2XhL6KFlwPS63GhZnMA\"\n        >\n          <FontAwesomeIcon icon={faYoutube} />\n        </a>\n        <a\n          className=\"grow\"\n          target=\"_blank\"\n          href=\"https://www.amazon.com/Beach-House-Jacob-Erick/dp/B07MTPDPG3/ref=sr_1_2?dchild=1&keywords=Jacob+Erick&qid=1591674789&s=dmusic&search-type=ss&sr=1-2\"\n        >\n          <FontAwesomeIcon icon={faAmazon} />\n        </a>\n        <a\n          className=\"grow\"\n          target=\"_blank\"\n          href=\"https://soundcloud.com/user-693428248\"\n        >\n          <FontAwesomeIcon icon={faSoundcloud} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Music;\n","import React from \"react\";\nimport \"./App.scss\";\nimport logo from \"./logo.svg\";\nimport { HashRouter, Route, Link, Switch } from \"react-router-dom\";\n\n//page imports\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport Contact from \"./components/Contact\";\nimport Music from \"./components/Music\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Header />\n      <Switch>\n        <Route path=\"/music\" component={Music} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      <Footer />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"./styles/fonts.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles/style.sass\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}